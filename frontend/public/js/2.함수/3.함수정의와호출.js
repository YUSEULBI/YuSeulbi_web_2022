
// 1-1. 인수X 반환X 함수
function 함수1(){ // f s // 인수없음
// function : 함수 선언시 사용되는 키워드
	// 함수 1 : 함수이름 [식별자] 동일한 파일내에서는 중복이름 불가능
	 	// ( ) : 인수 정의하는 곳
	 		// { } : 함수가 호출되면 실행되는 구역
	 alert('함수1 실행 됨') // 반환없음
} // f e

함수1( ) //함수에게 값을 받지 못하는 호출

// 2-1. 인수O 반환O 함수
function 함수2( x , y ){ // f s // 인수있음 x,y
	// ( x , y ) : 해당 함수를 호출시 인수 (x와 y:이름 아무거나) 2개를 받는 함수
	alert('함수 2 실행 됨')
	return x + y; // 반환할 값을 지정
} // f e

// 2-2. 함수 호출
let result = 함수2( 3 , 5 ) // 반환[return]값을 변수에 저장
alert( '함수2가 보내준 값 :' + result ) // 반환받은 결과값을 호출

// 3-1. 인수 O 반환X
function 함수3 ( x , y , z ){ // 인수가 있음 x,y,z
	let result = x + y + z 
	alert( ' 함수3 실행됨 : ' + result ) // 반환 없이 호출.
}

함수3( 3,5,7 ) // 반환값을 받지 못함. 값이 저장되지않음


//4. 인수X 반환O 함수
function 함수4(){ // 인수가 없음
	let result = 3 + 5 +8
	return result; // 반환값을 지정
}

let result2 =  함수4() // 함수에게 값을 반환받음, 변수에 저장
alert ( ' 함수4 실행후 보내준 값 : ' + result2 ) // 저장된 반한값 호출
